package GreatOffer.TopInterviewQ;


// 给定一个整数 n ，返回 n! 结果中尾随零的数量。
// 提示 n! = n * (n - 1) * (n - 2) * ... * 3 * 2 * 1

public class _0172_FactorialTrainingZeroes {


    // n的阶乘的所有因子中，2的数量肯定比5多，我们只需要找出n的所有相乘的数中包含多少个因子5即可，因为每个5都可以
    // 至少匹配到一个2凑成10；
    // 1 2 3 4 5    6 7 8 9 10   可以发现每5个数就能找到一个因子5，所以n的阶乘中至少有 n/5 个因子5；
    // 而且每25个数中就会多出来一个因子5， 1~25这组中，25这个数可以提供两个因子5，所以每25个数一组就会多出一个因子
    // 5；同样地，每125个数一组，就会比25个数一组再额外多出一个因子5。
    // 所以，n的阶乘一共能提供多少个因子5： n/5 + n/25 + n/125...

    public int trailingZeroes(int n) {
        if (n < 5)
            return 0;
        int res = 0;
        while (n != 0) {
            n /= 5;
            res += n;
        }
        return res;
    }
}
